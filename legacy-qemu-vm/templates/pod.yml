kind: Pod
apiVersion: v1
metadata:
  namespace: {{ .Release.Namespace }}
  name: {{ .Release.Name }}
  labels:
    app: qemu-vm
    vm: {{ .Release.Name }}
spec:
  containers:
  - name: {{ .Release.Name }}
    image: {{ .Values.image.repository }}/{{ .Values.image.path }}
    resources: {}
    imagePullPolicy: {{ .Values.image.pullPolicy }}
    volumeMounts:
    # Not needed because pod is priviledged:
    # - mountPath: /dev/kvm
    #   name: dev-kvm
    # - mountPath: /dev/net/tun
    #   name: dev-tun
    # - mountPath: /sys/fs/cgroup
    #   name: cgroup
    - mountPath: /var/local/qemu
      name: qemu
    volumeDevices:
    {{- range $index, $disk := .Values.vm.disks }}
    - devicePath: /dev/disk-{{ $index }}
      name: disk-{{ $index }}
    {{- end }}
    securityContext:
      privileged: true
    command:
    - /bin/bash
    - -xc
    - |
      qemu_args=(
        -nodefaults
        -no-user-config
        -name guest={{ .Release.Name }},debug-threads=on
        -uuid {{ required "Valid .Values.vm.machineUuid entry required" .Values.vm.machineUuid }}
        -machine pc-q35-6.2,usb=off,vmport=off,{{ if .Values.vm.secureBoot }},smm=on{{ end }}dump-guest-core=off{{ if .Values.vm.efiBoot }},pflash0=efi-bios-rom-device,pflash1=efi-bios-eeprom-device{{ end }},memory-backend=pc.ram,hpet=off
            {{- if .Values.vm.secureBoot }}
            -global driver=cfi.pflash01,property=secure,value=on 
            -object '{"qom-type":"secret","id":"masterKey0","format":"raw","file":"/var/local/qemu/master-key.aes"}'
            {{- end }}
            {{- if .Values.vm.efiBoot }}
            -blockdev '{"node-name":"efi-bios-rom-backend","driver":"file","filename":"/usr/share/OVMF/OVMF_CODE.fd","auto-read-only":true,"discard":"unmap"}'
            -blockdev '{"node-name":"efi-bios-rom-device","driver":"raw","read-only":true,"file":"efi-bios-rom-backend"}'
            -blockdev '{"node-name":"efi-bios-eeprom-backend","driver":"file","filename":"/var/local/qemu/EFI_VARS.fd","auto-read-only":true,"discard":"unmap"}'
            -blockdev '{"node-name":"efi-bios-eeprom-device","read-only":false,"driver":"raw","file":"efi-bios-eeprom-backend"}'
            {{- end }}
            {{- if .Values.vm.useTpm }}
            -chardev socket,id=chrtpm,path=/run/swtpm-sock
            -tpmdev emulator,id=tpm0,chardev=chrtpm 
            -device tpm-tis,tpmdev=tpm0
            {{- end }}
            -object '{"id":"pc.ram","qom-type":"memory-backend-ram","size":{{ .Values.vm.maximumMemory }}}'
        -cpu host,migratable=on
        -smp {{ .Values.vm.currentCpus }},maxcpus={{ .Values.vm.maximumCpus }},sockets={{ .Values.vm.maximumCpus }},cores=1,threads=1
        -m {{ div .Values.vm.maximumMemory 1048576 }}
        -accel kvm
        -global kvm-pit.lost_tick_policy=delay
        -overcommit mem-lock=off
        -chardev socket,id=charmonitor,path=/var/local/qemu/monitor.sock,server=on,wait=off
        -mon chardev=charmonitor,id=monitor,mode=control
        -rtc base=utc,driftfix=slew
        -global ICH9-LPC.disable_s3=1
        -global ICH9-LPC.disable_s4=1
        -boot strict=on
        -device pcie-root-port,port=16,chassis=1,id=pci.1,bus=pcie.0,multifunction=on,addr=0x2
        -device pcie-root-port,port=17,chassis=2,id=pci.2,bus=pcie.0,addr=0x2.0x1
        -device pcie-root-port,port=18,chassis=3,id=pci.3,bus=pcie.0,addr=0x2.0x2
        -device pcie-root-port,port=19,chassis=4,id=pci.4,bus=pcie.0,addr=0x2.0x3
        -device pcie-root-port,port=20,chassis=5,id=pci.5,bus=pcie.0,addr=0x2.0x4
        -device pcie-root-port,port=21,chassis=6,id=pci.6,bus=pcie.0,addr=0x2.0x5
        -device pcie-root-port,port=22,chassis=7,id=pci.7,bus=pcie.0,addr=0x2.0x6
        -device pcie-root-port,port=23,chassis=8,id=pci.8,bus=pcie.0,addr=0x2.0x7
        -device pcie-root-port,port=24,chassis=9,id=pci.9,bus=pcie.0,multifunction=on,addr=0x3
        -device pcie-root-port,port=25,chassis=10,id=pci.10,bus=pcie.0,addr=0x3.0x1
        -device pcie-root-port,port=26,chassis=11,id=pci.11,bus=pcie.0,addr=0x3.0x2
        -device pcie-root-port,port=27,chassis=12,id=pci.12,bus=pcie.0,addr=0x3.0x3
        -device pcie-root-port,port=28,chassis=13,id=pci.13,bus=pcie.0,addr=0x3.0x4
        -device pcie-root-port,port=29,chassis=14,id=pci.14,bus=pcie.0,addr=0x3.0x5
        -device qemu-xhci,p2=15,p3=15,id=usb,bus=pci.2,addr=0x0
        -device virtio-scsi-pci,id=scsi0,bus=pci.3,addr=0x0
        -device virtio-serial-pci,id=virtio-serial0,bus=pci.4,addr=0x0
        {{- range $index, $disk := .Values.vm.disks }}
        -device virtio-blk-pci,bus=pci.{{ add $index 10 }},addr=0x0,drive=container-{{ $index }}-device,id=virtio-disk{{ $index }},bootindex={{ add $index 1 }}
        -blockdev '{"node-name":"container-{{ $index }}-backend","driver":"host_device","filename":"/dev/disk-{{ $index }}","aio":"native","cache":{"direct":true,"no-flush":false},"auto-read-only":true,"discard":"unmap"}'
        -blockdev '{"node-name":"container-{{ $index }}-device","read-only":false,"driver":"raw","file":"container-{{ $index }}-backend"}'
        {{- end }}
        -netdev tap,id=hostnet0,script=/etc/qemu-ifup,downscript=no
        -device virtio-net-pci,netdev=hostnet0,id=net0,bus=pci.1,addr=0x0{{ if .Values.vm.mac }},mac={{ .Values.vm.mac }}{{ end }}
        -chardev pty,id=charserial0
        -device isa-serial,chardev=charserial0,id=serial0,index=0
        -chardev socket,id=charchannel0,path=/var/local/qemu/org.qemu.guest_agent.0,server=on,wait=off
        -device virtserialport,bus=virtio-serial0.0,nr=1,chardev=charchannel0,id=channel0,name=org.qemu.guest_agent.0
        -chardev spicevmc,id=charchannel1,name=vdagent
        -device virtserialport,bus=virtio-serial0.0,nr=2,chardev=charchannel1,id=channel1,name=com.redhat.spice.0
        -device usb-tablet,id=input0,bus=usb.0,port=1
        -audiodev '{"id":"audio1","driver":"spice"}'
        -spice port={{ .Values.vm.spicePort }},addr=0.0.0.0,disable-ticketing=on,seamless-migration=on
        -device virtio-vga,id=video0,max_outputs=1,bus=pcie.0,addr=0x1
        -device ich9-intel-hda,id=sound0,bus=pcie.0,addr=0x1b
        -device hda-duplex,id=sound0-codec0,bus=sound0.0,cad=0,audiodev=audio1
        -chardev spicevmc,id=charredir0,name=usbredir
        -device usb-redir,chardev=charredir0,id=redir0,bus=usb.0,port=2
        -chardev spicevmc,id=charredir1,name=usbredir
        -device usb-redir,chardev=charredir1,id=redir1,bus=usb.0,port=3
        -device virtio-balloon-pci,id=balloon0,bus=pci.6,addr=0x0
        -object '{"qom-type":"rng-random","id":"objrng0","filename":"/dev/urandom"}'
        -device virtio-rng-pci,rng=objrng0,id=rng0,bus=pci.7,addr=0x0
        -sandbox on,obsolete=deny,elevateprivileges=deny,spawn=allow,resourcecontrol=deny 
        -msg timestamp=on          
      )
      
      shutdownVM() {
          echo Shutting down VM
          socat - unix-connect:/var/local/qemu/monitor.sock <<- EOD
      {"execute": "qmp_capabilities"}
      {"execute": "system_powerdown"}
      EOD
      }
      
      trap shutdownVM SIGTERM
      
      {{- if .Values.vm.useTpm }}
      echo Starting software TPM2...      
      swtpm socket --tpm2 \
        --tpmstate dir=/var/local/qemu \
        --ctrl type=unixio,path=/run/swtpm-sock,mode=0600 \
        --terminate \
        &
        
      while [ ! -r /run/swtpm-sock ]; do
        sleep 1;
      done
      {{- end }}
      
      echo Starting VM...
      /usr/bin/qemu-system-x86_64 ${qemu_args[@]} &
      qemu_pid=$!
      
      while true; do
        wait $qemu_pid
        wait_result=$?
        if [ $wait_result -le 128 ]; then
          # Exists no longer or has terminated
          break
        fi
        # wait has been interrupted
      done
      echo VM has terminated
  volumes:
  # Not needed because pod is priviledged:
  # - name: dev-kvm
  #   hostPath:
  #     path: /dev/kvm
  #     type: CharDevice
  # - hostPath:
  #     path: /dev/net/tun
  #     type: CharDevice
  #   name: dev-tun
  # - name: cgroup
  #   hostPath:
  #     path: /sys/fs/cgroup
  - name: qemu
    hostPath:
      path: /var/local/qemu/guests/{{ .Release.Name }}
  {{- range $index, $disk := .Values.vm.disks }}
  - name: disk-{{ $index }}
    persistentVolumeClaim:
      claimName: {{ $.Release.Name }}-pvc-{{ $index }}
  {{- end }}
  hostNetwork: true
  terminationGracePeriodSeconds: 60
  restartPolicy: Never
